import definitions from './definitions';
import info from './info';
import paths from './paths';
import components from './components';

let hostUrl = 'PROD_API_URL';

if (!process.env.NODE_ENV) {
    hostUrl = 'localhost:8080';
}

export default {
    swagger: '2.0',
    info,
    host: hostUrl,
    basePath: '/',
    tags: [
        {
            name: 'Users',
            description: 'User management endpoint for single admin',
        },
        {
            name: 'Auth',
            description: 'Endpoints for register/login',
        },
    ],
    schemes: [
        'http',
        'https',
    ],
    consumes: [
        'application/json',
    ],
    produces: [
        'application/json',
    ],
    securityDefinitions: {
        Bearer: {
            description:
                `For accessing the API a valid JWT token must be passed in all the queries in
       the 'Authorization' header.
       A valid JWT token is generated by the expressJwt and returned on dashboard, after a
       succefull login. It is stored as id_token in localstorage.

       The following syntax must be used in the 'Authorization' header:

        Bearer xxxxxx.yyyyyyy.zzzzzz`,
            type: 'apiKey',
            name: 'Authorization',
            in: 'header',
        },
    },
    paths: {
        '/auth/register/': paths.auth.register,
        '/auth/login': paths.auth.login,
        '/users': paths.users['get-all-user'],
        '/users/{userId}': paths.users['get-user'],
    },
    components,
    definitions: {
        Pagination: definitions.Pagination,
        Token: definitions.Token,
        User: definitions.User,
        401: definitions.Errors[401],
        400: definitions.Errors[400],
        404: definitions.Errors[404],
        500: definitions.Errors[500],
    },
};
